-- 00. Creating DB

CREATE DATABASE NationalTouristSitesOfBulgaria

-- 01. DDL

CREATE TABLE Categories
(
	Id INT PRIMARY KEY IDENTITY
   ,[Name] VARCHAR(50) NOT NULL
)

CREATE TABLE Locations
(
	Id INT PRIMARY KEY IDENTITY
   ,[Name] VARCHAR(50) NOT NULL
   ,Municipality VARCHAR(50) NULL
   ,Province VARCHAR(50) NULL
)

CREATE TABLE Sites
(
	Id INT PRIMARY KEY IDENTITY
   ,[Name] VARCHAR(100) NOT NULL
   ,LocationId INT FOREIGN KEY REFERENCES Locations(Id) NOT NULL
   ,CategoryId INT FOREIGN KEY REFERENCES Categories(Id) NOT NULL
   ,Establishment VARCHAR(15) NULL
)

CREATE TABLE Tourists
(
	Id INT PRIMARY KEY IDENTITY
   ,[Name] VARCHAR(50) NOT NULL
   ,Age INT NOT NULL
   ,PhoneNumber VARCHAR(20) NOT NULL
   ,Nationality VARCHAR(30) NOT NULL
   ,Reward VARCHAR(20) NULL
)

CREATE TABLE SitesTourists
(
	TouristId INT NOT NULL
   ,SiteId INT NOT NULL
   ,PRIMARY KEY (TouristId,SiteId)
   ,FOREIGN KEY (TouristId) REFERENCES Tourists(Id)
   ,FOREIGN KEY (SiteId) REFERENCES Sites(Id)
)

CREATE TABLE BonusPrizes
(
	Id INT PRIMARY KEY IDENTITY
   ,[Name] VARCHAR(50) NOT NULL
)

CREATE TABLE TouristsBonusPrizes
(
	TouristId INT NOT NULL
   ,BonusPrizeId INT NOT NULL
   ,PRIMARY KEY (TouristId,BonusPrizeId)
   ,FOREIGN KEY (TouristId) REFERENCES Tourists(Id)
   ,FOREIGN KEY (BonusPrizeId) REFERENCES BonusPrizes(Id)
)

-- 02. Insert

INSERT INTO Tourists([Name],Age,PhoneNumber,Nationality,Reward)
Values
	('Borislava Kazakova',52,'+359896354244','Bulgaria',NULL)
   ,('Peter Bosh',48,'+447911844141','UK',NULL)
   ,('Martin Smith',29,'+353863818592','Ireland','Bronze badge')
   ,('Svilen Dobrev',49,'+359986584786','Bulgaria','Silver badge')
   ,('Kremena Popova',38,'+359893298604','Bulgaria',NULL)

INSERT INTO Sites([Name],LocationId,CategoryId,Establishment)
VALUES
	('Ustra fortress', 90, 7, 'X')
   ,( 'Karlanovo Pyramids', 65, 7, NULL)
   ,('The Tomb of Tsar Sevt', 63, 8, 'V BC')
   ,( 'Sinite Kamani Natural Park', 17, 1, NULL)
   ,( 'St. Petka of Bulgaria â€“ Rupite', 92, 6, '1994')

-- 03. Update

UPDATE Sites
SET Establishment = '(not defined)'
WHERE Establishment IS NULL

-- 04. Delete

DELETE TouristsBonusPrizes
WHERE BonusPrizeId = 5
DELETE BonusPrizes
WHERE [Name] = 'Sleeping bag'

-- 05. Tourists

SELECT 
	[Name]
   ,Age
   ,PhoneNumber
   ,Nationality
FROM Tourists
ORDER BY Nationality,Age DESC, [Name]

-- 06. Sites with Their Location and Category

SELECT 
	s.[Name] AS [Site]
   ,l.[Name] AS [Location]
   ,s.Establishment AS Establishment
   ,c.[Name] AS Category
FROM Sites AS s
JOIN Categories AS c ON s.CategoryId = c.Id
JOIN Locations AS l ON s.LocationId = l.Id
ORDER BY c.[Name] DESC,l.[Name],s.[Name]

-- 07. Count of Sites in Sofia Province

SELECT 
	l.Province
   ,l.Municipality
   ,l.[Name]
   ,COUNT(s.[Name])
FROM Locations AS l
JOIN Sites AS s ON l.Id = s.LocationId 
WHERE l.Province = 'Sofia'
GROUP BY l.[Name],l.Province,l.Municipality
ORDER BY COUNT(s.[Name]) DESC, l.[Name]

-- 08. Tourist Sites established BC

SELECT
	s.[Name] AS [Site]
   ,l.[Name] AS [Location]
   ,l.Municipality
   ,l.Province
   ,s.Establishment
FROM Sites AS s
JOIN Locations AS l ON s.LocationId = l.Id
WHERE LEFT(l.[Name],1) NOT IN ('D','B','M')
AND RIGHT(s.Establishment,2) IN ('BC')
ORDER BY s.[Name]

-- 09. Tourists with their Bonus Prizes

SELECT 
    t.[Name]
   ,t.Age
   ,t.PhoneNumber
   ,t.Nationality
   ,CASE
		WHEN bp.[Name] IS NULL THEN '(no bonus prize)'
		ELSE bp.[Name] 
    END AS Reward
FROM Tourists AS t
LEFT JOIN TouristsBonusPrizes AS tb ON t.Id = tb.TouristId
LEFT JOIN BonusPrizes AS bp ON tb.BonusPrizeId = bp.Id
ORDER BY [Name]

-- 10. Tourists visiting History & Archaeology sites

SELECT DISTINCT
	SUBSTRING(t.[Name]
   ,CHARINDEX(' ', t.[Name]) + 1
   ,LEN(t.[Name]) - CHARINDEX(' ', t.[Name]))
   AS LastName
   ,t.Nationality
   ,t.Age
   ,t.PhoneNumber
FROM Tourists AS t
JOIN SitesTourists AS st ON t.Id = st.TouristId
JOIN Sites AS s ON  st.SiteId = s.Id
JOIN Categories AS c ON s.CategoryId = c.Id
WHERE c.[Name] = 'History and archaeology'
ORDER BY LastName

-- 11. Tourists Count on a Tourist Site

GO

CREATE FUNCTION  udf_GetTouristsCountOnATouristSite (@Site VARCHAR(100))
RETURNS INT
AS
BEGIN
	DECLARE @touristCount INT
	SET @touristCount = (SELECT 
							 COUNT(*) 
						 FROM Sites AS s
						 JOIN SitesTourists AS st ON s.Id = st.SiteId
						 WHERE s.[Name] =@Site
						 GROUP BY st.SiteId)
	RETURN @touristCount
END

-- 12. Annual Reward Lottery

GO

CREATE PROC usp_AnnualRewardLottery(@TouristName VARCHAR(50))
AS
BEGIN
	DECLARE @sitesCount INT
	SET @sitesCount = (SELECT 
						  COUNT(SiteId)
					   FROM SitesTourists AS st
					   JOIN Tourists AS t ON t.Id = st.TouristId
					   WHERE t.[Name] = @TouristName
					   GROUP BY t.[Name])

	IF(@sitesCount >= 100)
		BEGIN
			UPDATE Tourists
			SET Reward = 'Gold bagde'
			WHERE [Name] = @TouristName
		END
	ELSE IF(@sitesCount >= 50)
		BEGIN
			UPDATE Tourists
			SET Reward = 'Silver badge'
			WHERE [Name] = @TouristName
		END
	ELSE IF(@sitesCount >= 25)
		BEGIN
			UPDATE Tourists
			SET Reward = 'Bronze badge'
			WHERE [Name] = @TouristName
		END

	SELECT 
		[Name]
	   ,Reward
	FROM Tourists
	WHERE [Name] = @TouristName
END

