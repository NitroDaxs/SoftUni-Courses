-- 00. CREATE DB

CREATE DATABASE Airport

-- 01. DDL

CREATE TABLE Passengers
(
	Id INT PRIMARY KEY IDENTITY
   ,FullName VARCHAR(100) NOT NULL
   ,Email VARCHAR(50) NOT NULL
)

CREATE TABLE Pilots
(
	Id INT PRIMARY KEY IDENTITY
   ,FirstName VARCHAR(30) NOT NULL
   ,LastName VARCHAR(30) NOT NULL
   ,Age TINYINT NOT NULL
   ,Rating FLOAT NULL
)

CREATE TABLE AircraftTypes
(
	Id INT PRIMARY KEY IDENTITY
   ,TypeName VARCHAR(30) NOT NULL
)

CREATE TABLE Aircraft
(
	Id INT PRIMARY KEY IDENTITY
   ,Manufacturer VARCHAR(25) NOT NULL
   ,Model VARCHAR(30) NOT NULL
   ,[Year] INT NOT NULL
   ,FlightHours INT NULL
   ,Condition CHAR NOT NULL
   ,TypeId INT FOREIGN KEY REFERENCES AircraftTypes(Id) NOT NULL
)

CREATE TABLE PilotsAircraft
(
	AircraftId INT NOT NULL
   ,PilotId INT NOT NULL
   ,PRIMARY KEY (AircraftId,PilotId)
   ,FOREIGN KEY (AircraftId) REFERENCES Aircraft(Id)
   ,FOREIGN KEY (PilotId) REFERENCES Pilots(Id)
)

CREATE TABLE Airports
(
	Id INT PRIMARY KEY IDENTITY
   ,AirportName VARCHAR(70) UNIQUE NOT NULL
   ,Country VARCHAR(100) UNIQUE NOT NULL
)

CREATE TABLE FlightDestinations
(
	Id INT PRIMARY KEY IDENTITY
   ,AirportId INT FOREIGN KEY REFERENCES Airports(Id) NOT NULL
   ,[Start] DATETIME NOT NULL
   ,AircraftId INT FOREIGN KEY REFERENCES Aircraft(Id) NOT NULL
   ,PassengerId INT FOREIGN KEY REFERENCES Passengers(Id) NOT NULL
   ,TicketPrice DECIMAL(18,2) DEFAULT(15) NOT NULL
)

-- 02. Insert

INSERT INTO Passengers
SELECT 
	CONCAT(FirstName,' ',LastName) AS FullName
   ,CONCAT(FirstName,LastName, '@gmail.com')
FROM Pilots
WHERE Id BETWEEN 5 AND 15

-- 03. Update

UPDATE Aircraft
SET Condition = 'A'
WHERE 
(Condition = 'C' OR Condition = 'B')
AND (FlightHours IS NULL OR  FlightHours <= 100)
AND [Year] >= 2013

-- 04. Delete

DELETE Passengers
WHERE LEN(FullName) <= 10

-- 05. Aircraft

SELECT 
	Manufacturer
   ,Model
   ,FlightHours
   ,Condition
FROM Aircraft
ORDER BY FlightHours DESC

-- 06. Pilots and Aircraft

SELECT 
	p.FirstName
   ,p.LastName
   ,a.Manufacturer
   ,a.Model
   ,a.FlightHours
FROM Pilots AS p
JOIN PilotsAircraft AS pa ON p.Id = pa.PilotId
JOIN Aircraft AS a ON pa.AircraftId = a.Id
WHERE a.FlightHours IS NOT NULL 
AND a.FlightHours <= 304
ORDER BY a.FlightHours DESC,p.FirstName

-- 07. Top 20 Flight Destinations

SELECT TOP(20)
	fd.Id
   ,[START]
   ,p.FullName
   ,a.AirportName
   ,fd.TicketPrice
FROM FlightDestinations AS fd
JOIN Airports AS a ON fd.AirportId = a.Id
JOIN Passengers AS p ON fd.PassengerId = p.Id
WHERE DAY(fd.[Start]) % 2= 0
ORDER BY TicketPrice DESC, a.AirportName

-- 08. Number of Flights for Each Aircraft

SELECT 
	a.Id AS AircraftId
   ,a.Manufacturer
   ,a.FlightHours
   ,COUNT(*) AS FlightDestinationsCount
   ,ROUND(AVG(fd.TicketPrice), 2)
FROM Aircraft AS a
JOIN FlightDestinations AS fd ON a.Id = fd.AircraftId
GROUP BY a.Id,a.Manufacturer,a.FlightHours
HAVING COUNT(*) >1 
ORDER BY FlightDestinationsCount DESC , a.Id

-- 09. Regular Passengers

SELECT 
	p.FullName
   ,COUNT(*) AS CountOfAircraft
   ,SUM(fd.TicketPrice) AS TotalPayed
FROM Passengers AS p
JOIN FlightDestinations AS fd ON p.Id = fd.PassengerId
JOIN Aircraft AS a ON fd.AircraftId = a.Id
WHERE SUBSTRING(p.FullName,2,1) = 'a'
GROUP BY p.FullName
HAVING COUNT(*) > 1
ORDER BY FullName

-- 10. Full Info for Flight Destinations

SELECT 
	ap.AirportName
   ,fd.[Start]
   ,fd.TicketPrice
   ,p.FullName
   ,ac.Manufacturer
   ,ac.Model
FROM FlightDestinations AS fd
JOIN Passengers AS p ON fd.PassengerId = p.Id
JOIN Airports AS ap ON fd.AirportId = ap.Id
JOIN Aircraft AS ac ON fd.AircraftId = ac.Id
WHERE DATEPART(HOUR,fd.Start) BETWEEN 6 AND 20
AND fd.TicketPrice > 2500
ORDER BY ac.Model 

-- 11. Find all Destinations by Email Address
GO

CREATE FUNCTION udf_FlightDestinationsByEmail(@email VARCHAR(50))
RETURNS INT
AS
BEGIN
	DECLARE @count INT
		SET @count = (SELECT COUNT(*) FROM Passengers AS p
					  JOIN FlightDestinations AS fd ON p.Id = fd.PassengerId
					  WHERE p.Email =@email)
	RETURN @count
END

-- 12. Full Info for Airports
GO

CREATE PROC usp_SearchByAirportName(@airportName VARCHAR(70))
AS
BEGIN
	SELECT 
		a.AirportName
	   ,p.FullName
	   ,CASE
			WHEN fd.TicketPrice <= 400 THEN 'Low'
			WHEN fd.TicketPrice BETWEEN 401 AND 1500 THEN 'Medium'
			ELSE 'High'
	    END AS LevelOfTickerPrice
	   ,ac.Manufacturer
	   ,ac.Condition
	   ,[at].TypeName
	FROM FlightDestinations AS fd
	JOIN Airports AS a ON fd.AirportId = a.Id
	JOIN Aircraft AS ac ON fd.AircraftId = ac.Id
	JOIN Passengers AS p ON fd.PassengerId = p.Id
	JOIN AircraftTypes AS [at] ON ac.TypeId = [at].Id
	WHERE a.AirportName = @airportName
	ORDER BY ac.Manufacturer, p.FullName
END
