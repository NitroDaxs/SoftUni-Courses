-- 01. Recordsâ€™ Count

SELECT 
	COUNT(*) AS [Count]
FROM WizzardDeposits

-- 02. Longest Magic Wand

SELECT
	MAX(MagicWandSize) AS [LongestMagicWand]
FROM WizzardDeposits

-- 03. Longest Magic Wand per Deposit Groups

SELECT
	DepositGroup
   ,MAX(MagicWandSize) AS [LongestMagicWand]
FROM WizzardDeposits
GROUP BY DepositGroup

-- 04. Smallest Deposit Group per Magic Wand Size

SELECT TOP(2)
	DepositGroup
FROM WizzardDeposits
GROUP BY DepositGroup
ORDER BY AVG(MagicWandSize)

-- 05. Deposits Sum

SELECT 
	DepositGroup
   ,SUM(DepositAmount)
FROM WizzardDeposits
Group BY DepositGroup

-- 06. Deposits Sum for Ollivander Family

SELECT 
	DepositGroup
   ,SUM(DepositAmount) AS [TotalSum]
FROM WizzardDeposits
WHERE MagicWandCreator = 'Ollivander family'
Group BY DepositGroup

-- 07. Deposits Filter

SELECT 
	DepositGroup
   ,SUM(DepositAmount) AS [TotalSum]
FROM WizzardDeposits
WHERE MagicWandCreator = 'Ollivander family'
Group BY DepositGroup
HAVING SUM(DepositAmount) < 150000
ORDER BY TotalSum DESC

-- 08. Deposit Charge

SELECT
	DepositGroup
   ,MagicWandCreator
   ,MIN(DepositCharge) AS [MinDepositCharge]
FROM WizzardDeposits
GROUP BY DepositGroup,MagicWandCreator
ORDER BY MagicWandCreator,DepositGroup

-- 09. Age Groups

SELECT 
	AgeGroup
   ,COUNT(*)
FROM 
	(SELECT 
		CASE
			WHEN Age <= 10 THEN '[0-10]'
			WHEN Age >=11 AND AGE <=20 THEN '[11-20]'
			WHEN Age >=21 AND AGE <=30 THEN '[21-30]'
			WHEN Age >=31 AND AGE <=40 THEN '[31-40]'
			WHEN Age >=41 AND AGE <=50 THEN '[41-50]'
			WHEN Age >=51 AND AGE <=60 THEN '[51-60]'
			WHEN Age >=61 THEN '[61+]'
		END AS [AgeGroup]
    FROM WizzardDeposits) AS [SubQ]
GROUP BY SubQ.AgeGroup

-- 10. First Letter

SELECT 
	 LEFT(FirstName, 1) AS [FirstLetter]
FROM WizzardDeposits
WHERE DepositGroup = 'Troll Chest'
GROUP BY LEFT(FirstName, 1)
ORDER BY [FirstLetter]

-- 11. Average Interest

SELECT
	DepositGroup
   ,IsDepositExpired
   ,AVG(DepositInterest) AS [AverageInterest]
FROM WizzardDeposits
WHERE DepositStartDate > '01/01/1985'
GROUP BY DepositGroup,IsDepositExpired
ORDER BY DepositGroup DESC,IsDepositExpired

-- 12. *Rich Wizard, Poor Wizard

SELECT 
SUM(SubQ.SumDifference)  AS [SumDifference]
FROM(SELECT
    DepositAmount - LEAD(DepositAmount) 
	OVER (ORDER BY [Id]) 
	AS [SumDifference]
FROM WizzardDeposits) AS SubQ

-- 13. Departments Total Salaries

SELECT 
	DepartmentID
   ,SUM(Salary)
FROM Employees
GROUP BY DepartmentID
ORDER BY DepartmentID

-- 14. Employees Minimum Salaries

SELECT 
	DepartmentID
   ,MIN(Salary)
FROM Employees
WHERE DepartmentID IN  (2,7,5)
AND HireDate > '01/01/2000'
GROUP BY DepartmentID  
ORDER BY DepartmentID 

-- 15. Employees Average Salaries

SELECT * INTO [SalaryAbove3000]
FROM Employees
WHERE Salary > 30000

DELETE FROM SalaryAbove3000
WHERE ManagerID =42

UPDATE SalaryAbove3000
SET Salary += 5000
WHERE DepartmentID = 1

SELECT 
	DepartmentID
   ,AVG(Salary)
FROM SalaryAbove3000
GROUP BY DepartmentID

-- 16. Employees Maximum Salaries

SELECT 
	SubQ.DepartmentID
   ,[Max] AS [MaxSalary]
	FROM 
	(
		SELECT
			DepartmentID
		   ,MAX(Salary) AS [Max]
		FROM Employees
		GROUP BY DepartmentID) 
		AS SubQ
WHERE SubQ.[Max] NOT BETWEEN 30000 AND 70000
GROUP BY SubQ.DepartmentID,[Max]

-- 17. Employees Count Salaries

SELECT 
	COUNT(*) AS [Count]
FROM Employees
WHERE ManagerID IS NULL

-- 18. *3rd Highest Salary

SELECT DISTINCT
	DepartmentID
   ,Salary
FROM(
	SELECT 
		DepartmentID
	   ,Salary
	   ,DENSE_RANK() OVER (PARTITION BY DepartmentId ORDER BY Salary DESC) AS [Rank]
FROM Employees) AS [SubQ]
WHERE SubQ.[Rank] = 3

-- 19. **Salary Challenge

SELECT 
	AVG(Salary)
FROM Employees
GROUP BY DepartmentID

SELECT TOP(10)
	e.FirstName
   ,e.LastName
   ,e.DepartmentID
FROM Employees AS [e]
WHERE e.Salary >
		(SELECT 
			AVG(Salary)
		FROM Employees AS eSub
		WHERE e.DepartmentID = eSub.DepartmentID
		GROUP BY DepartmentID) 
ORDER BY e.DepartmentID
